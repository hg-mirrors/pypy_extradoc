TASKS
-----

- update things in metainterp/doc

- compare backend vs gcc quality
- make x86 not recompile everything
   - think about code memory management

- migrate tasks to extradoc/planning/jit.txt
- merge the jit branch to trunk
- upgrade python on wyvern
- improve test running, compile only once
- sort out a benchmark infrastructure. graphs!!!
- investigate test coverage
- inlining on the Python level
- streamline calls
- stability‽
- nightly run of checks on output of pypy-c-jit


Goals/Benchmarks
-----------------

Goal: be somehow faster than CPython in real programs

Benchmarks:
    - Richards
    - Pystone
    - mako, gadfly, templess
    - port some of the JS benchmarks?
    - look at unladden-swallow benchmarks
    - Sympy
    - Simpy?
    - Pyrolog
    
later:
    - translate.py

- there should be a unified way to run these benchmark
- benchmarks should be run nightly
- we might need a benchmarking server


State of Tests
---------------

- we need tests for pypy-jit behaviour that explicitely check whether the loops
  make sense
- the tragedy of the skipped tests

things we know are missing
---------------------------

metainterp/frontend:
- virtualizables are not finished
- there is no restriction on the length of the trace
- proper inlining logic
- loop nesting (across calls)

- speed of tracing and fallbacks?

backend:
- recompilation after every bridge is bad
- memory management for the code
- speed of backend?

Python interpreter:
- lookups of various kinds
- calls‽

ootype discussion
------------------

- try to unify interfaces to make doing the right thing for ootype easier
- different constraints for different groups of people
- what to do with ootype jit support after Anto finished his PhD?

inlining discussion
--------------------

- need to trace aggressively
- give up when trace becomes too long
- need to remember when we gave up
- need to reset counters
- tracing aggressively will put pressure on the speed of tracing
- what should we do about recursive calls?
- connecting compiled loops accross a call?

