Topics and goals
----------------

Meta-Tasks
++++++++++

 - Tracker-gardening
 - Review the cpython regression test suite (skips/failures)
 - think about/remove orphaned parts

Wednesday after the planning session:
 - Start slowly thinking about 1.1 plans

Thursday afternoon:
 - discuss callback mechanism for rffi/lltype/ll2ctypes

Friday:
 - breakday

Saturday:
 - discuss approaches for extension modules

Translation toolchain
+++++++++++++++++++++

 - fix the nightly CPython test runs DONE

 - kill remaining suggested_primitives DONE

 - remove the symbol table from the C backend DONE

 - fix windows compilation (christian)

 - find out why our memcpy behaves so erratically
   GCC behaves very erratically, so we won't work on this for now

 - finish rctypes removal

 - remove support for suggested_primitives and the extfunctable (alexander,
   carl friedrich)

 - raw_malloc should be split, rffi one should not use obmalloc (it's
   not thread-safe)

 - delegate finding type stuff like vtables etc to GC, cleaner interface
   for rtti, simplify translator/c/gc.py
     - kill opaque hacks in the C backend

 - clean up the tangle of including headers in the C backend

 - remove the use of pyobjs in the test wrapping functions IN-PROGRESS
   (richard, samuele)

 - kill half concrete wrapper
  
 - implement global variables in rffi (anto, maciek)
   

 - refactor OO external objects. discussion happened, the outcome was that it
   doesn't make sense, because javascript and cli are too different

 - review pdbplus, especially the graph commands, also in the light of
   https://codespeak.net/issue/pypy-dev/issue303 and the fact that we
   can have more than one translator/annotator around (with the
   timeshifter)

Interpreter
+++++++++++

 - there's a shadow tracking bug it seems

 - fix the taint space

 - fix the thunk space

 - review the things implemented at applevel whether they are
   performance-critical IN-PROGRESS: moved super, classmethod, statimethod to
   interplevel, some dict methods

 - remove prebuilt costate vars  (might happen before)

 - think about the __name__ of MixedModules, because *.py makes CLR unhappy

Modules
+++++++

 - Take a look at module failures on Mac OS X (_socket)

JIT
+++


 - start writing real unit tests for the merging logic

Discussion issues
+++++++++++++++++

 - app-level ctypes
 
 - separate compilation

