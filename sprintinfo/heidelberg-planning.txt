PyPy Heidelberg sprint planning (22th-29st August) 
-----------------------------------------------------

Armin Rigo          
Samuele Pedroni     
Carl Friedrich Bolz 
Niklaus Haldimann  
Holger Krekel    
Richard Emslie  
Jacob Hallen       
Laura Creighton   
Ludovic Aubry    
Anders Chrigstroem 
Christian Tismer  
Anders Lehmann   
Beatrice Duering 
Eric van Riet Paap

Rough Week planning::
    each day: 10 AM - 7 PM (lunch break at ~1-3pm)

    monday 22nd sprinting
    tuesday 23rd sprinting 
    wednesday 24th sprinting

    thursday 25th break day!

    friday 26th sprinting / release 
    saturday 27th sprinting 
    sunday 28th sprinting / technical summary/some future planning
    monday 29th sprinting/eu-meeting/cleanup

Release (PyPy-0.7)::

  - Documentation work:
    - update getting_started.txt to reflect the 0.7 release
      and include instruction on how to translate
      - possibly streamline the tool chain (for genc/llvm) 
      - do we have an easy-to-explain tool chain working for win32? 
  - fix download locations, prepare/try out packaging 
  - RELEASE CUTTING friday morning: 
    - copy pypy/dist to pypy/release/0.7.x 
      and work on 0.7.x regarding remaining release issues 
    - which documentation should be served on the web
      page?   Probably just serving dist would fit for now. 

Translation

  - Finish GIL-based threading: backend support, fix bugs?
    
    mostly done (missing: rtyper support for dict with int keys)

  - Isolate refcounting in genc, and
    have an option to enable and use Boehm instead

    isolating done, there is a test for Boehm, but not implemented

2.4.1 Compliance::

  - Recategorize the tests in core/non-core ( = language compliancy)
    41 current-core tests should not be in core, 
    11 current-non-core tests should be in core 
     5 are about threading (should be core?)
  - test_unicode, test_codecs
    test_unicode has one remaining error involving 
    eval(unicode) which means that compile(unicode) does not work
    currently. (see issue in the tracker, ludovic will try to look
    into this briefly) 
  - Fix/adjust/prioritize compliance test problems
    done: fixed binascii problems. 
  - (tismer) in-progress: speeding up compilation on the 
    translated pypy version by doing an external cpython-invocation 
    to produce the code object. 
  - Some other "non-core" tests revealing real bugs/problems?

  - from wednesday morning on most of us should work 
    on compliancy related issues (mostly everybody)

  - (holger) try to fix the problem that you have to be in 
    2.4.1/test in order to successfully run tests 

  - NOTE: pypy-dist/lib-python/failure_list.txt 
    contains ongoing anaylsis/Status for compliancy tests!

Compiler/Parser::

  - Fix bugs, missing features (some cause compliance regressions) 
  - Work on making the compiler interp-level 
      st->ast mostly done, should go into the release (ludal, nik)
        integrated with a runtime option
        need to fix astcompiler 
      ast->bytecode may be done for the release? in-progress

  - compiling unicode strings (see failing test_builtins)
    https://codespeak.net/issue/pypy-dev/issue97 
  - interactive mode parsing (issue115 -- use "single" instead of "exec"?
      look at code.py from lib-python/2.4.1/)
      high priority: why is "from __future__" not working? (flag missing?)
      inputs that are a single string are considered docstrings
      (also single unicode strings are considered docstrings)

    no progress on the bugs

Built-in modules::

  - Do we still miss important os.* functionality?
  - FIXED: errno (easy for now)
  - Enable our own array/_sre when translating 
    (try with the current _sre and its interp-level parts, 
    otherwise just use the app-level
    one) (nik) in progress (trying to get '_sre' to translate)
                            ^^^ getting there
  - (Review builtin modules again to see if we missed something)
  - 'math' must be finished (math.log(<long object>))

Fix/garden issues for the release in the tracker::

  - Go over the issues in the tracker: close, postpone or fix them as needed
    for the release
  - Review Hildes_to_Heidel.txt contents too

LLVM backend (richard, eric)::

  - Improvement work to stabilize and match genc
  - (Try to share code with genc?)
 
GC (carl friedrich, samuele)::
 
  - Complete SoC GC framework (cfbolz)
    in-progress: two more nights or so. 

  - (Start to think how/what is still missing to leverage it for Phase 2) 
  - (related: isolating refcounting)

Cleanups

  - We didn't really manage to tackle the cleanups listed in Hildes_to_Heidel.txt;
    do we want, have we the time to address some of them during the sprint for the release

Future Planning

  - Plan work until next sprint 
  - Consider priorities up to review
  - Start thinking about organizing Phase2 work, baseline status wrt this 
