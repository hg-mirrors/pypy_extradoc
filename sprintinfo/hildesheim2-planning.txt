

PyPy Hildesheim2 sprint planning (25th-31st July) 
-------------------------------------------------------

overall time planning:: 
    25th full sprint day 
    26th full sprint day 
    27th afternoon break
    28th morning break 
    29th full sprint day   # (compliance test decision)
    30th full sprint day 
    31th more or less full sprint day 

    each day:  
        9-10 AM breakfast
        10:30 planning session 
        evening: dinner 

    Carl Friedrich Bolz   
    Richard Emslie        
    Armin Rigo            
    Holger Krekel         whole-time 
    Christian Tismer      whole-time 
    Samuele Pedroni       whole-time  

Misc
-------- 

* -> TRACKER: (mostly done?) add missing docstrings on
  app-level built-in types and functions, etc. (Laura): there 
  now is a program that generates the docstrings into the 
  appropriate places but it needs prettification.  (christian)

Current Main task: RTYPER issues
-----------------------------------

Left::

    - running translate_pypy!

    - (Armin, Holger) add a compiling option to the C backend that allows to 
      generate a standalone binary (as opposed to a Python extension module) 

    - (Armin, Holger) likely we have a possibly deep exception handling problem:
      implicitely exceptions are attached to the last (high level) 
      operation in a block but when the RTyper converts this operation
      into possibly many low-level operations then it's unlikely 
      that we can preserve the implicit assumption that only 
      the last (low-level) operation possibly raises an exception. 

      solution: unknown at this point. 

      maybe describe a few scenarios regarding exception handling 
      describing the interactions/processing of exceptions in 
      flowobjspace/annotation/rtyping 

    - (Holger, X) try to extend test framework a bit to make applevel 
      tests allow to use 'self.somevalue' coming from interplevel 'self.w_somevalue'. 
    - (Holger, X) finish and polish and test our own posix module

    - (Carl, Samuele) finish/send out the Heidelberg sprint announcement 
      goals: do the 0.7 release! 
      (0.7 is meant as a first self-contained pypy release 
      with quite some c-extension modules missing (everything
      below 1.0 is implicitly alpha'ed or XXXed or both)  

      - translation efforts 
      - work on 2.4.1 compliancy (let's have a lib-python/ISSUE.txt well
        before the sprint and let's try to count by failing tests not 
        failing test files) 
      - rewriting c-extension modules/integrating existing rewrites  
      - all kinds of small release issues 
      - possibly some more LLVM efforts 

    - (Armin ...) integrate Niklaus's applevel _sre module as a mixed module  
      (so that you can switch it in via usemodules=_sre). This may
      also ease moving gradually to an interplevel implementation. 
      
        pypy/module/_sre/
            full_sre_project/ # with manifest and so on 
            conftest.py # don't recurse into full_sre_project (unless the unittests
            are converted to py.test) 
            __init__.py: (appleveldefs -> full_sre_projec/...) 
            Armin is going to ask niklaus about his plans and 
            suggest something along these lines. 

    - (tracker ->) write a FAQ entry about "what and why is rpython?") 

    - (Carl, Samuele) finally start with garbage collection (CF)

    - investigate the possibility of translating the interactive part of PyPy
      or alternatively (probably preferably) running it completely at applevel

    - (Richard, with Armin's throwing-examples help) let llvm support
      varsize structs and possibly refactor/cleanup a bit the current
      code (richard already contacted Eric and also worked a bit on improving
      PBC support for llvm)

    - (Christian, Samuele) rewriting the marshal module on interplevel (mostly
      done but there are difficult dependencies on the applevel _codecs.py 
      and some builtins (like frozenset) that live at applevel) 


Pairing
-------

basically everyone should keep an eye on targetpypymain, in the meantime
working on a subtask..

  - samuele, carl friedrich: garbage collection

  - richard: plugin in sre

  - christian: rewriting marshal

  - DONE armin, holger: applevel stdout

  - armin: write nik mail, fix the entrypoint
