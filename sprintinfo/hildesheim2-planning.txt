
PyPy Hildesheim2 sprint planning (25th-31st July) 
-------------------------------------------------------

overall time planning:: 
    25th full sprint day 
    26th full sprint day 
    27th afternoon break
    28th morning break 
    29th full sprint day   # (compliance test decision)
    30th full sprint day 
    31th more or less full sprint day 

    each day:  
        9-10 AM breakfast
        10:30 planning session 
        evening: dinner 

    Carl Friedrich Bolz   
    Richard Emslie        
    Armin Rigo            
    Holger Krekel         whole-time 
    Christian Tismer      whole-time 
    Samuele Pedroni       whole-time  

Misc
-------- 

* -> TRACKER write a tool that discovers which revision of the pypy tree 
  broke the high level annotator (in that it produced SomeObjects). 
  Consider distributing the actual annotation to multiple hosts. (holger)

* -> TRACKER: (mostly done) add missing docstrings on app-level built-in types and 
  functions, etc. (Laura): there now is a program that generates the 
  docstrings into the appropriate places but it needs prettification. 
  (christian)

Current Main task: RTYPER issues
-----------------------------------

Remaining problem about pyc files::

    The inconsistency problems are more or less solved now,
    but PYC file support is disabled at the moment because
    it is just too slow in general.

    Bootstrapping is right but messy.  Christian will rewrite
    marshal at interp-level at some point.

    We won't use PYC file support for translate_pypy anyway.
    We will construct and initialize the object space just like now,
    and then import at app-level the 'compiler' package, and finally
    patch the executioncontext.compiler to use this 'compiler'
    package.  The resulting object space is what translate_pypy is
    seeing.

    Ultimately the compiler and marshal should both be at
    interp-level anyway.

Getting rid of faking::

    DONE.  no faking left if you use --file --nofakedmodules.
    (of course in this case you can't import most modules like
    _sre at all.)

Left::

    - unify the way stdobjspace is configured.
      the basic objspace configuration interface
      becomes a set of keyword arguments. The current
      command line arguments will be mapped onto this
      interface.
      This also includes configuration of which modules
      should be loaded.

    - extend the testing framework to allow to specify
      a space with options for a test. Related to the latter.

    - bug to be fixed: applevel test stdout is no longer
      captured.

    - running translate_pypy!

Pairing
-------

configuration of the stdobjspace (holger, richard)

compiler + translate_pypy (christian, samuele, armin, carl friedrich)
(trying to sub-pair internally)
