
Open areas in translation 
------------------------------------- 

Still missing are:

* currently remaining rtyper topics: 

  - found to be missing (ale, arigo)::

            Builtins
            --------

            (easy) math.floor
            (easy) math.fmod

            (strange)(delegating to backend?) sys.getrefcount
            (medium) applevel sys module should not refer to 
                     interplevel sys.getdefaultencoding

            (easy) time.time (see how time.clock is done)

            implement in RPython (and change importing.py accordingly) 
            os.path.dirname/normpath/join (including the closure of what they use) 

            (generate c_api calls) os.path.exists 
            (generate c_api calls) os.path.isdir 

            Unary operations
            ----------------

            rclass: (easy) issubtype

            (arre, christian): 
            rdict: (easy) method_get (?)
                   (easy) method_copy
                   (easy) method_update (?)
                   (easy) method_keys (?)
                   (easy) method_values (?)
                   (easy) method_items (?)

            (easy) rstr: str.split(single_constant_character)

            (easy) rpbc: is_true  -->  False for None
                                       True for all other PBCs


            Binary operations
            -----------------

            (easy) rstr: mul, inplace_mul  (for CharRepr only!)


            Overridden functions in PyPy
            ----------------------------

            (easy) override:ignore
            (easy) override:instantiate
            (hard, probably needs to be implemented at C/CPython level): 
                override:wrap_exception_cls
                override:fake_object
                override:cpy_compile

* (partially DONE) convert each file that does 
  'from ... import *' to use explicit imports (e.g. 
  from pypy.rpython import lltype and then use lltype.*) 

* DONE (holger, michael) translator/c/float_include.h should be complete. 

* progress on translation of example targets:
    python demo/bpnn.py   (holger, michael, samuele) 
    python pypy/translator/goal/translate_pypy.py targetrichards.py

* (medium) write a tool that discovers which revision of the pypy tree 
  broke the high level annotator (in that it produced SomeObjects). 
  Consider distributing the actual annotation to multiple hosts. 

* (medium) experiment in a branch with using Python 2.4 semantics 
  and the standard library (lib-python/2.4.1 ...)

* (medium) finish objspace/std/longobject.py.

* (hard) find a way to generate c_api calls with automated 
  conversions from ll-strings to c-like strings 

