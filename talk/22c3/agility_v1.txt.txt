Agile Business and EU funding: sprint methodology in funded OSS project
-----------------------------------------------------------------------

Abstract:
-------------
This paper uses an evolutionary approach, a walkthrough of the history of the 
PyPy project, touching down on different aspects of agility. 

In the founding of the community there was a clear vision of agile development and sprints as the key method. The idea of EU-funding and the process in achieving this created a paradox: how to keep the agile open source community structure with key aspects of the project being funded through EU. 

This then exposed the project to formal requirements planning, estimation,resource tracking and the challenge was to design a process in which a balance was struck between community and consortium, between a developer driven process and formal organinizational structure. 

The evolution of the project - from a non profit Open Source initiative to a partial funded EU project - made possible the growth of Agile Business. 


The vision: the creation of an OSS community
--------------------------------------------

Founding PyPy:
<Holger?>

Agile approaches: sprinting

The first drafts of ideas of what was to become PyPy started during a sprint, held in Hildesheim in February 2003. Inspired by this practice, used by other Python oriented projects such as Zope. Originally the sprint methodology used in the Python community grew from practices within Zope Corporation. Their  definition of a sprint is "two-day or three-day focused development session, in which developers pair off together
in a room and focus on building a particular subsystem". 

It was decided early that sprinting was to be the key technique in creating a collaborative and open community. The early PyPy sprints moved around, being organised by core developers together with local Pythonistas and soon to become PyPy:ers in LOvain Le Neuve, Gothenburg,Vilnius and Amsterdam.This strategy helped to create as well as strengthen the growing community and sprints gave the opportunity to both help, participate and influence the idea of PyPy.

Sprints as such is not part of the Agile portfolio of techniques, the closes thing to it comes from Scrum who names the 30 days long programming iterations "sprints", covering a certain increment. In the Scrum method considerable effort is placed into performing the sprint planning as well as creating and documenting the "sprint backlog" which is then feedbacked into the "Product backlog".The sprint ends with a "sprint review" - an informal planning session in which the team decides on upcoming work, there are also techniques in which the team looks at ways to improve the development methodology and future sprints.

The practise used within the Python community and by Zope Corporation is an adoption of just this aspect of Scrum - not the entire Scrum methodology which covers more than just sprinting. Here - and even in the early days of PyPy sprints where limited to 2-3 days, which in some sense reduces the need for rigourous planning beforehand but also the need to review the process. We will come back to this subject later on.

Why did PyPy choose sprinting as a key technique? It is a method that fits distributed teams well because it gets the team focused around clear (and challenging) goals while working collarobative (pairprogramming, status meeting, discussions etc) as well as accelerated (short increments and tasks, "doing" and testing instead of long start ups of planning and requirement gathering). This means that most of the time a sprint
is a great way of getting results, but also to get new people aquinted with
the codebase. It is also a great method for dissemination and learning within
the team because of the pairprogramming.

Agile approaches: testdriven development



Community structure:
- transparent communication
- decision making
- interaction with other communities


The idea: Framework 6 programme IST funding for OSS work
--------------------------------------------------------

"Why do you want money - aren´t you guys non-profit?":
- impact for the EU

"Why do we want money - isn´t OSS non-profit?":
- impact for the community

Proposal and negotiations:
- formal requirements
- organizational limbo

The Project: consortium and companies within a OSS community structure
----------------------------------------------------------------------

Forced entrepreneurship:

Creating the consortium:

Formalizing aspects of the community:
- roles and responsibilities


The challenge: balancing agile OSS community structures with EU requirements
------------------------------------------------------------------------------ 

Sprints - the key agile approach:

Physical persons:

Communication channels:

Managing diversities: agile business - a succesful marriage ?
-----------------------------------------------------------

Agile EU-project:

Agile businesses:


