22C3 "Open Source, EU Funding and Agile Methods" 
29th of December 2005/Berlin

Slides Bea:


Core of Agile practises: the people factor
============================================================

- "Agile processes are designed to capitalize on each
  individual and each team´s unique strenghts" (Cockburn, Highsmith, 2001)
- OSS nature of teams: self-organized, intensely 
  collaborative - fit the agile approach
- OSS teams are an unique implementation of agile practices - why?

Picture: man on the moon

Agile approaches aim at:
============================================================

* reducing ... "cost of information",distance from decision-making
* by ... physical location, unorthodox dissemination
* resulting in ... improved sense of community, team "morale"

Origins of sprinting
============================================================

- Scrum (Agile community): 1 month long iteration of
  development work, increments (also supporting activities:
  planning, documentation, tracking work, evaluation)

- Zope Foundation (Python Community): "two-day or three-day
  focused development session, in which developers pair off
  together in a room and focus on building a particular
  subsystem".    
   
PyPy sprints
============================================================
- The project "started" during a sprint
- Changing facilities and location as a strategy (Vilnius,
  Lovain LeNeuve, Leysin, Gothenburg, Paris, Heidelberg,
  Hildesheim, Washington etc)
- The nature of sprints have evolved since the project started
  2003 and since recieving partial EU-funding 2004/2005
   
Bidding for the EU-funding
============================================================
- Project needed to reach critical mass, EU needed novel
  compiler design techniques in OSS contexts

- Proposal was written during sprints as well as distributed
  (submitted Oct 2003)
- Negotiations in Brussels (March 2004): key issues being 30% cuts in budget and  denied procedures for funding contribution
- Project "started" 1 Dec 2004: troubles with creating
  consortium agreement fitting the OSS structure needed

Organising the consortium
============================================================
- 7 partners, 3 previously not involved in the PyPy community
- 2 new companies: "forced" entrepreneurship
- All partners but one partially funded (50% cost models)
- Less than 5% of the involved developers was covered by this partial funding

Organising the work
============================================================
- 14 workpackages and 58 deliverables, 3 phases 
- Need for consortium meetings every month (IRC)
- Sprints every 6th week (coordinating development and management work)

The different cultures of the PyPy project
============================================================
- OSS (Python) culture (agile and distributed workstyle)
- EU project culture
- Traditional project management culture
- Chaospilot (actionlearning and process design) culture
- 3 different national cultures

The challenge: managing diversities part 1.
============================================================
- Formal project organization vs developer driven process
		- management team, technical board and partners
		- sprint organising
- Resulting in: increased risk of added workload of management
  work on core developers 

The challenge: managing diversities part 2.
============================================================
- Formal EU requirements vs agile strategies
		- written high level requirements
		- change control structures complicated
- Resulting in:increased risk of missing opportunities and not
  creating/reacting to change fast enough

The challenge: managing diversities part 3.
============================================================
- OSS community vs "conceptual integrity"
		- pypy-dev/core developers in technical board
		- industrial usage vs research oriented work
- Resulting in: increased risk for unbalancing the community

Picture: chaos vs structure

Conclusion
============================================================
- A shared and challenging vision
- Respecting and "exploiting" strengths of the different cultures involved
- Designing minimalistic project structures channeling work, not hindering work
- Room for group learning and creating change - not just reacting to change
