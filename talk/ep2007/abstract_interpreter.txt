Why use PyPy interpreter?
=====================================

XXX Better title?

Speakers: Holger Krekel & Maciek Fijalkowski

Abstract
---------

We would like to present features showcasing PyPy's flexible architecture,
in other words, what makes the pypy interpreter unique. Showcases will
include, but not limited to:

* multiple implementations of interpreter objects, allows more flexibility
  regarding object usage, without user intervention (or even knowledge)
* transparent proxy, a way to have special objects of interpreter
  types with completely controlled behaviour from application level.
* distribution, strange implementation of RMI which allows of remote
  access to everything including frames, file objects etc.
* object tainting, security feature similiar to ruby's tainting.
* lazy computations
* ... and many more, as talk topics might appear just-in-time
