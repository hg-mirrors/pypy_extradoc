=================================
PyPy's interpreter features
=================================

:Authors: Maciej Fijalkowski & Holger Krekel (merlinux GmbH)
:Place: Europython 2007
:Date: XXX

What features?
--------------

* We don't change python syntax nor semantics

* avoiding religious war...

* they give new dimensions to how one can use python

* pick the feature set of your choice...

XXX crap

Multiple object implementations
-------------------------------

XXX rant about python exposing impl details to use? (sets vs dicts)

* same types - different implementations

* example - ropes

* example - multidicts

Transparent proxy
-----------------

* proxy: intercept any operation on an builtin object

* transparent: don't change object interface 

* useful for implementing application level functionality 
  orthogonally to usage of objects 

* is the mechanism for distribution and persistence prototypes

* see also .NET TransparentProxy

XXX list-over-http demo

Lazy ad-hoc distribution
------------------------

- transparent lazy access to remote objects
- internally uses RPC-like protocol
- remote objects are presented through transparent proxies
- access to remote tracebacks, frames, etc. work as if local!

XXX show

Orthogonal Persistence
--------------------------

* persist Python objects "invisibly"

* interpose interception of changes to objects

* implement your own custom persistence scheme (e.g. using ZODB)

XXX some demo

Micro threading in PyPy 
-----------------------

* stackless *transform* / micro-threads:

* suspending/resuming computations

*  pickling/migration of computations

XXX show

* unlimited recursion 

* *composable* greenlets, tasklets, co-routines

Taint Space 
--------------------

* control of information data flow:
   
  - label sensitive data 
  - avoid sensitive information leaks
  - explicit primitive to declassify

* easily implemented as an object space around
  the standard one securing all operations
  on objects

Taint Space diagram
---------------------

.. raw:: html

   <br>

.. image:: interpreterarch.png

* interactive prompt demo

Thunk object space
------------------

* lazy computations

* easy hack (200 loc, including demo)

Disclaimer
----------

* pypy features are not ready for production use

* although not because they're buggy

* lack of modules

XXX more?
