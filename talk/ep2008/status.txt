===========
PyPy status
===========

:Author: Maciej Fijalkowski
:Location: Europython 2008
:Date: 7 July 2008

What this talk is about
=======================

* more details recent developements

* our plans

* how we're going to achieve this

* more or less recap of our blog

Production ready
=====================

* We concentrated on running
  existing applications on top of pypy

* Sometimes requiring to change applications slightly

* Especially refcounting details tend to be a problem
  open('xxx', 'w').write('stuff')

Ctypes
======

* Official way to have bindings to 
  external (C) libraries for pypy

* Slow, but getting better

* Sponsored by google

* Can handle ie pysqlite-ctypes, pyglet, pymunk or Sole Scion

XXX demo of sole scion and pyglet

* ctypes is getting better as a side effect

Ctypes configure
================

* Our own small addition to general
  ctypes usefulness

* Invokes C compiler for small details

* Can handle #defines, types, structure layout
  etc.

XXX demo

Sqlite
======

* Part of cpython stdlib

* We use Gerhard Haering's ctypes version
  (XXX link)

* Works reasonably well after fixes

Django
======

* We run (almost) unmodified django

* Only sqlite DB backend for now

* We'll run 1.0 definitely

XXX demo

Pylons
======

* Worked almost out of the box once eggs
  are working (1 day)

* No sqlalchemy yet, obscure problems
  ahead

XXX demo

Twisted & Nevow
===============

* Twisted have some glitches

* Nevow works

* We don't support pycrypto nor pyopenssl and we
  won't

Other software
==============

* bittorrent

* pypy translation toolchain

* various smaller things, templating engines,
  most pure-python software

Conclusion
==========

* There is no feature obscure enough for people
  not to rely on it

* Generally it's fairly unlikely we'll ever try
  to support stuff without tests

Examples of obscure features
============================

XXX - non-string keys in typedict

XXX - list comprehension variable in __all__

XXX - relying on untested and undocumented private stuff
      (zipimport._zip_directory_cache)

XXX - exact strings in exceptions

Speed - comparison with CPython
===============================

* We're something between 0.8-2x slower than
  cpython on various benchmarks.

* gcbench - 0.8 (fast gc)

* We're progressing slowly

Speed - decent gcs
==================

* Faster than refcounting

* Better handling of obscure cases

* Troubles with ie communication with C

Speed - JIT generator
=====================

* Not ready yet!

* Will be super fast

* Prolog prototype

Other backends
==============

* pypy-jvm runs!

* More integration between pypy-cli and .NET

* General speed improvements

* Both backends are progressing - very slowly though

Plans
=====

* More JIT - faster Python

* Support full cpython's stdlib

* Get more funding money

No-plans
========

* RPython extensions for CPython

* Maintain arbitrary number of third-party
  extension modules
