====================
PyPy's JIT and Numpy
====================

Common problem when developing scientific application is that CPython's
interpreter is too slow. This can mitigated by usage of FORTRAN, C or Cython
in performance-critical parts of the code, but it would be much nicer
to just run python faster.

JIT was one of the main objectives of PyPy project for quite a while now.
As of `March 2009`_ we're able to speed up simple examples in Python
for about 20-30x over the speed of CPython. Since PyPy's JIT is much more
flexible than for example Psyco, we expect even greater speedups in the
future, as well as support for floats and 64bit architecture, which Psyco
will not achieve in forseeable future.

In this talk we would like to talk about PyPy's JIT, design principles and
it's future, without going into too many architectural details.

We would also like to present how JIT can make the life easier of simple
postprocessing of data generated by EULAG model. XXX extend.

.. _`March 2009`: http://morepypy.blogspot.com/2009/03/good-news-everyone.html
