
XXX order of slides is a bit random, I will reorder them

===========================================
py.test - rapid testing with minimal effort
===========================================

:authors: Maciej Fijalkowski, Holger Krekel (merlinux GmbH), Brian Dorsey
:date: 16 March 2008
:event: Pycon 2008, Chicago IL
XXX fill details

Intro
==========

* if you think 5 lines are more than 2

* minimal boilerplate code

* cross-project testing tool

* developed partly for purposes of PyPy

Writing tests with py.test
===========================

* almost identical to nose

* def test_something(): defines test function

* class TestSomething: defines test class

* setup/teardown on many levels (module, class, function)

Automatic test collection
==========================

* no need for specific test runners

* simply running py.test is enough

* py.test --collectonly to show tests which would run

XXX demo of --collectonly

assert by assert
=================

* no self.assertEqual, self.failUnlessEqual and friends

* assert x == 3 is enough

* assert reinterpretation (XXX demo)

stdout/err capturing
=====================

* no point in showing output of working tests

* leave your debug prints in your tests

* options to control

test selection
===============

* -k selects tests

* -k classname.methodname works as well (XXX trunk only???)

* -k -name selects all but name

* multiple -k are treated as "and" operator

installation
=============

* easy_install pylib XXX check

* run py.test on your testing directory

* you can checkout svn trunk directory for
  new cool features

ad-hoc test distribution
=========================

* done over py.execnet

* can connect over Popen, Ssh, socket...

* rsyncs local dir, no need to copy files

XXX demo

web reporter
=============

* useful for running distributed tests

* still needs some work (any volunteers?)

extending
==============

* conftest.py does the "magic"

* you can add options per-project (XXX demo)

* you can change the way tests are run (validating ReST,
  running ecma test suite, etc.)

pypy extenstions
=================

* we use py.test extensively in pypy

* few side-projects, buildbot hooks, htmlconftest

extending - reporters
=========================

* parsing output is not any fun in general

* reporter hooks (trunk only)

XXX demo

future
==========

* 0.9 was Feb 2007, so releasing 1.0 soon

* cleanup a bit, more plugin architecture

* ...
