Hands on PyPy - how to modify your virtual machine in 15 minutes
================================================================

XXX We need a sexier title.

* Presenter name(s) & contact information (email, telephone).

Intended audience
=================

This tutorial is intended for people who desire to modify python's
virtual machine.

Perhaps you are uncomfortable with some design decisions? want an
extra feature? desire fast modules but don't want to write them
in C?  or just wish to experiment?

Attendees will be expected to be fluent in Python, and have prior
experience with meta-programming (in any language).  No knowledge of C
is needed nor required, although prior knowledge of any virtual
machine (for example CPython) might be useful.  If you are wondering
'what's a virtual machine' then this tutorial is not for you.

Tutorial format description
===========================

A brief introduction to pypy codebase and concepts, then hands-on session
with pre-prepared tasks.

Recording
=========

I give permission to record and publish my PyCon tutorial for free
distribution.

Requirements
============

XXX prepare

Note for Reviewers
==================

As this is a very advanced topic, we don't expect too many people to show
up. In case the tutorial would be accepted and there would be less than 10
people showing up, we can do the tutorial for free.

Also, in case there would be CPython developement tutorial, it would be
nice if those two will not collide, if possible.

Promotional summary
===================

Ever missed feature in your Python interpreter? Ever wondered how to write
extensions in Python rather than C or Pyrex? Ever wondered how pypy works?

This tutorial will give you detailed description how the PyPy python
interpreter is constructed and how to change it to meet your needs.
It'll also contain simple changes to the interpreter codebase as live coding
session. Afterwards will be welcomed to experiment in groups on they're own
on implementing prepared interpreter changes.

Attendees are welcome to bring their own laptops.

Outline
=======

* Introduction into pypy - 15 minutes

  * Motivation - why Python in Python

  * RPython - the restricted python

  * Objectspace concept

  * Backends - how we can compile to all platforms

* Scheme over codebase - 15 minutes

XXX example, think what that could be. Much of touching pypy,
    not much doing algorithms IMHO

* Tutorial outline for website publication, if different from the above.

* Presenter bio (one paragraph), written in the third person ("Presenter Name is..."). Include where you live, your job, your projects, books you've written, volunteer activities, family, etc.

* Previous experience: references of presentation/teaching engagements (sessions taught at OSCON, EuroPython, local user groups, at work, etc.). Extra consideration will be given to presenters with prior experience.
