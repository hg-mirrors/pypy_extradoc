Title: Python in a sandbox
Presenter: Holger Krekel <holger@merlinux.eu>
Recording: i give permission to record and publish my PyCon talk for free distribution. 
Talk length: 30 minutes, if possible more
Intended Audience: advanced python programmers
Format of talk: interactive lecture, questions welcome at all times
Categories: Core, Other Implementations/PyPy, Embedding and extending Python

Presenter bio: 

Holger Krekel is a co-founder of the PyPy project and
participates on many levels in it.  He is the initiator and
maintainer of the popular py.test and a few other tools.  In
2004 he founded merlinux, a company focusing on PyPy and py.test 
developments.  Holger has talks at many EuroPython and 
PyCon confereces and gave well received testing 
tutorials at EuroPython 2008 and Pycon-UK 2008. 

Talk summary: 

Have you been looking for ways how to run untrusted Python
code or how to restrict file and other IO access?  Not
satisfied with what you found so far? 
We'll showcase the PyPy approach which allows to run
unrestricted Python code but control all file, IO, CPU and RAM
resources.  We'll discuss the underlying model and discuss
shortcomings and future possibilities.  

description: 

In the 17 years of Python existence there have been numerous 
approaches to "sandbox" Python, Zope's RestrictedPython 
and Google AppEngine being popular examples.  PyPy takes 
a fresh approach and allows to systematically control 
all access to Files and IO.  This not only allows 
to prevent a process from accessing system resources 
but it allows to provide a fully virtualized system environment - 
for example a Python program cannot easily detect that its
file objects are in fact provided by another Python process. 

Not only Files and IO but also RAM and CPU usage are controlable 
which makes the PyPy approach probably the first to 
provide a fully sandboxed Python environment without placing
restrictions on language usage. 

We'll also discuss discuss some open issues and will take 
further discussion - probably schedule Open Space time
to discuss further work. 

Note that in this talk we will not talk much about 
architecture and other aspects of the PyPy projects. 


slide outline for review:

- Sandboxing movitation 
- PyPy's sandboxing large picture 
- virtualizing IO access 
- Demo 
- controler and sandboxed process 
- managing RAM and CPU restrictions
- shortcomings
- future directions
