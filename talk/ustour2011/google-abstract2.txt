
Authors: Armin Rigo, Maciej Fijalkowski
# XXX get bios from laura

The PyPy project has gathered recently a lot of attention for its
progress on speeding up the Python language -- it is the fastest,
most compatible and stable alternative Python interpreter.  We
will discuss what the PyPy project achieved, particularly in the
past two years in the area of dynamic (Just-in-Time) interpreters:

* most Python benchmarks run much faster than with CPython or Psyco
* the real-world PyPy compiler toolchain itself (200 KLocs) runs twice as fast
* supports 64bit and (in-progress) ARM
* full compatibility to CPython (more than Jython/IronPython)
* full (and JIT-ed) ctypes support to call C libraries from Python
* fully pluggable Garbage Collection
* supports Stackless Python (in-progress)
* new "cpyext" layer to integrate existing CPython C extensions
* experimental super-fast JIT-compilation of calls to C++ libraries

We want to reserve time for discussing potential future work like SWIG
and/or Cython compatibility and other areas brought up by the audience.
We will also briefly highlight who the active developers are and their
funding background.
